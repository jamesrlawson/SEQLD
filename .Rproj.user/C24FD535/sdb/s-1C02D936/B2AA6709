{
    "contents" : "source(\"scripts/functions.R\")\n\nalltraits <- read.csv(\"data/alltraits.csv\", header=T)\nsites <- read.csv(\"data/sites.csv\", header=T)\nvegSurveys <- read.csv(\"data/vegSurveys.csv\", header=T)\n\n# wrangling to convert transect counts -> site avg # per hectare\n\nvegSurveys <- melt(vegSurveys, id.vars = c(\"site\", \"transect\", \"transect.area\"))\n\ncolnames(vegSurveys)[4] <- c(\"Taxon\")\ncolnames(vegSurveys)[5] <- c(\"count\")\n\nvegSurveys$Taxon <- as.factor(trim(vegSurveys$Taxon)) # trim white spaces\nlevels(vegSurveys$Taxon) <- capitalise(levels(vegSurveys$Taxon)) # make sure spp names are properly capitalised\n\nvegSurveys$perHa <- vegSurveys$count * 10000 / vegSurveys$transect.area\n\nvegSurveys <- ddply(vegSurveys, .(site, Taxon), summarise, avgPerHa = mean(perHa))\n\nvegSurveys_all <- vegSurveys\n\n# find total cover in stems/Ha for each site\n\nvegSurveys.totalcover <- ddply(vegSurveys, .(site), summarise, totalcover = sum(avgPerHa, na.rm=TRUE))\n\nvegSurveys <- merge(vegSurveys, vegSurveys.totalcover)\n\nvegSurveys <- merge(vegSurveys, alltraits, all.y=TRUE)\n\nvegSurveys <- vegSurveys[order(vegSurveys$site),]\n\n\n# find proportion of cover for which trait data is available\n\nvegSurveys.representedcover  <- merge(ddply(vegSurveys, .(site), summarise, representedcover = sum(avgPerHa, na.rm=TRUE)),\n                                      vegSurveys.totalcover)\n\nvegSurveys.representedcover$proportion <- vegSurveys.representedcover$representedcover / vegSurveys.representedcover$totalcover\n\n\n\nabun <- cast(vegSurveys, site ~ Taxon, value=\"avgPerHa\", fill=0)\n",
    "created" : 1430727440091.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2109249966",
    "id" : "B2AA6709",
    "lastKnownWriteTime" : 1430787122,
    "path" : "C:/Users/James/Desktop/stuff/data/analysis/R/SEQLD/scripts/analysis.R",
    "project_path" : "scripts/analysis.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}