#  alltraits$wood.density.1 <- NULL
imputed <- missForest(alltraits[,2:8], maxiter = 100, ntree= 1000, verbose =TRUE, replace=TRUE, variablewise=TRUE)
alltraits.imputed <- data.frame(cbind(alltraits[1], as.data.frame(imputed[1])))
colnames(alltraits.imputed) <- c("Taxon",
"flowering.duration",
"leaf.area",
"maximum.height",
"seed.mass",
"SLA",
"wood.density",
"growthForm")
alltraits.imputed$wood.density <- alltraits$wood.density
#  alltraits.imputed$leaf.area <- alltraits$leaf.area
#  alltraits.imputed$seed.mass <- alltraits$seed.mass
#  alltraits.imputed$maximum.height <- alltraits$maximum.height
alltraits.imputed$growthForm <- alltraits$growthForm
alltraits <- alltraits.imputed
#alltraits <- na.omit(alltraits)
# wide > long format
vegSurveys <- melt(vegSurveys, id.vars = c("site", "transect", "transect.area"))
colnames(vegSurveys)[4] <- c("Taxon")
colnames(vegSurveys)[5] <- c("count")
vegSurveys$Taxon <- as.factor(trim(vegSurveys$Taxon)) # trim white spaces
levels(vegSurveys$Taxon) <- capitalise(levels(vegSurveys$Taxon)) # make sure spp names are properly capitalised
# find unmodified species richness
#richness <- ddply(vegSurveys, .(site, Taxon), summarise, sum = sum(count))
#richness$sum[richness$sum>0] <- 1 # convert counts to presabs
#richness <- ddply(richness, .(site), summarise, richness = sum(sum))
transectArea <- ddply(vegSurveys, .(site), summarise, transectArea = sum(unique((transect.area))))
richness <- ddply(vegSurveys, .(site, Taxon), summarise, sum = sum(count))
richness$sum[richness$sum>0] <- 1 # convert counts to presabs
richness <- ddply(richness, .(site), summarise, richness = sum(sum))
richness$transectArea <- transectArea$transectArea
richness$richness.stand <- richness$richness / richness$transectArea
rich.estimated <- rich.est(vegSurveys)
# include only species with more than X occurrences at any site
#vegSurveys$site <- as.factor(vegSurveys$site)
#abundance <- ddply(vegSurveys, .(Taxon, site), summarise, countSum = sum(count))
#vegSurveys.short <- ddply(abundance,  .(Taxon), summarise, maxCount = max(countSum))
#vegSurveys.short <- subset(vegSurveys.short, maxCount > 1) # insert X here
#vegSurveys <- vegSurveys[vegSurveys$Taxon %in% vegSurveys.short$Taxon, ]
# convert transect counts -> site avg # per hectare
vegSurveys$perHa <- vegSurveys$count * 10000 / vegSurveys$transect.area
vegSurveys <- ddply(vegSurveys, .(site, Taxon), summarise, avgPerHa = mean(perHa))
vegSurveys_all <- vegSurveys
# find total cover in stems/Ha for each site
vegSurveys.totalcover <- ddply(vegSurveys, .(site), summarise, totalcover = sum(avgPerHa, na.rm=TRUE))
#vegSurveys.totalcover <- vegSurveys.totalcover[-3,] # don't know why this row appears!
vegSurveys <- merge(vegSurveys, vegSurveys.totalcover)
#vegSurveys <- merge(vegSurveys, alltraits, all.y=TRUE)
vegSurveys <- merge(vegSurveys, alltraits)
vegSurveys <- vegSurveys[order(vegSurveys$site),]
str(vegSurveys)
source("scripts/functions.R")
alltraits <- read.csv("data/alltraits.csv", header=T)
sites <- read.csv("data/sites.csv", header=T)
vegSurveys <- read.csv("data/vegSurveys.csv", header=T)
hydro <- read.csv("data/hydro_1975-2008.csv", header=T)
source_GF <- read.csv("data/source_growthForm1.csv", header=T)
alltraits <- merge(alltraits, source_GF, all.x=TRUE)
str(vegSurveys)
alltraits <- read.csv("data/alltraits.csv", header=T)
sites <- read.csv("data/sites.csv", header=T)
vegSurveys <- read.csv("data/vegSurveys.csv", header=T)
hydro <- read.csv("data/hydro_1975-2008.csv", header=T)
source_GF <- read.csv("data/source_growthForm1.csv", header=T)
alltraits <- merge(alltraits, source_GF, all.x=TRUE)
#alltraits <- subset(alltraits, source != "exotic")
#alltraits$source <- NULL
#alltraits <- na.omit(alltraits)
alltraits$X <- NULL
alltraits <- missing(alltraits)
alltraits.discarded <- subset(alltraits, missing >=3)
alltraits <- subset(alltraits, missing <3) # only keep species with less than X NA trait values
alltraits <- rbind(alltraits, alltraits.discarded[46,])
#  alltraits <- alltraits[-57,]
#  alltraits <- alltraits[-12,]
alltraits$missing <- NULL
# normalise data
alltraits$SLA <- log10(alltraits$SLA)
alltraits$leaf.area <- sqrt(alltraits$leaf.area)
alltraits$seed.mass <- log10(alltraits$seed.mass)
alltraits$flowering.duration <- sqrt(alltraits$flowering.duration)
alltraits$maximum.height <- sqrt(alltraits$maximum.height)
#alltraits$leaf.narrowness <- log10(alltraits$leaf.narrowness)
# impute missing data using either mice or missForests
#  imputed <- mice(alltraits[,2:8])
#  alltraits.imputed <- data.frame(cbind(alltraits[1], complete(imputed)))
#  alltraits <- data.frame(cbind(alltraits.imputed[,1:6], alltraits["leaf.narrowness"],alltraits["wood.density"]))
#  alltraits$wood.density <- NULL
#  alltraits$wood.density <- alltraits$wood.density.1
#  alltraits$wood.density.1 <- NULL
imputed <- missForest(alltraits[,2:8], maxiter = 100, ntree= 1000, verbose =TRUE, replace=TRUE, variablewise=TRUE)
alltraits.imputed <- data.frame(cbind(alltraits[1], as.data.frame(imputed[1])))
colnames(alltraits.imputed) <- c("Taxon",
"flowering.duration",
"leaf.area",
"maximum.height",
"seed.mass",
"SLA",
"wood.density",
"growthForm")
alltraits.imputed$wood.density <- alltraits$wood.density
#  alltraits.imputed$leaf.area <- alltraits$leaf.area
#  alltraits.imputed$seed.mass <- alltraits$seed.mass
#  alltraits.imputed$maximum.height <- alltraits$maximum.height
alltraits.imputed$growthForm <- alltraits$growthForm
alltraits <- alltraits.imputed
#alltraits <- na.omit(alltraits)
# wide > long format
vegSurveys <- melt(vegSurveys, id.vars = c("site", "transect", "transect.area"))
colnames(vegSurveys)[4] <- c("Taxon")
colnames(vegSurveys)[5] <- c("count")
vegSurveys$Taxon <- as.factor(trim(vegSurveys$Taxon)) # trim white spaces
levels(vegSurveys$Taxon) <- capitalise(levels(vegSurveys$Taxon)) # make sure spp names are properly capitalised
# find unmodified species richness
#richness <- ddply(vegSurveys, .(site, Taxon), summarise, sum = sum(count))
#richness$sum[richness$sum>0] <- 1 # convert counts to presabs
#richness <- ddply(richness, .(site), summarise, richness = sum(sum))
transectArea <- ddply(vegSurveys, .(site), summarise, transectArea = sum(unique((transect.area))))
richness <- ddply(vegSurveys, .(site, Taxon), summarise, sum = sum(count))
richness$sum[richness$sum>0] <- 1 # convert counts to presabs
richness <- ddply(richness, .(site), summarise, richness = sum(sum))
richness$transectArea <- transectArea$transectArea
richness$richness.stand <- richness$richness / richness$transectArea
rich.estimated <- rich.est(vegSurveys)
# include only species with more than X occurrences at any site
#vegSurveys$site <- as.factor(vegSurveys$site)
#abundance <- ddply(vegSurveys, .(Taxon, site), summarise, countSum = sum(count))
#vegSurveys.short <- ddply(abundance,  .(Taxon), summarise, maxCount = max(countSum))
#vegSurveys.short <- subset(vegSurveys.short, maxCount > 1) # insert X here
#vegSurveys <- vegSurveys[vegSurveys$Taxon %in% vegSurveys.short$Taxon, ]
# convert transect counts -> site avg # per hectare
vegSurveys$perHa <- vegSurveys$count * 10000 / vegSurveys$transect.area
vegSurveys <- ddply(vegSurveys, .(site, Taxon), summarise, avgPerHa = mean(perHa))
vegSurveys_all <- vegSurveys
# find total cover in stems/Ha for each site
vegSurveys.totalcover <- ddply(vegSurveys, .(site), summarise, totalcover = sum(avgPerHa, na.rm=TRUE))
#vegSurveys.totalcover <- vegSurveys.totalcover[-3,] # don't know why this row appears!
vegSurveys <- merge(vegSurveys, vegSurveys.totalcover)
#vegSurveys <- merge(vegSurveys, alltraits, all.y=TRUE)
vegSurveys <- merge(vegSurveys, alltraits)
str(vegSurveys)
source <- data.frame(cbind(alltraits["source"], alltraits["Taxon"]))
alltraits <- merge(alltraits, source_GF, all.x=TRUE)
source <- data.frame(cbind(alltraits["source"], alltraits["Taxon"]))
alltraits <- read.csv("data/alltraits.csv", header=T)
sites <- read.csv("data/sites.csv", header=T)
vegSurveys <- read.csv("data/vegSurveys.csv", header=T)
hydro <- read.csv("data/hydro_1975-2008.csv", header=T)
source_GF <- read.csv("data/source_growthForm1.csv", header=T)
alltraits <- merge(alltraits, source_GF, all.x=TRUE)
source <- data.frame(cbind(alltraits["source"], alltraits["Taxon"]))
#alltraits <- subset(alltraits, source != "exotic")
#alltraits$source <- NULL
#alltraits <- na.omit(alltraits)
alltraits$X <- NULL
alltraits <- missing(alltraits)
alltraits.discarded <- subset(alltraits, missing >=3)
alltraits <- subset(alltraits, missing <3) # only keep species with less than X NA trait values
alltraits <- rbind(alltraits, alltraits.discarded[46,])
#  alltraits <- alltraits[-57,]
#  alltraits <- alltraits[-12,]
alltraits$missing <- NULL
# normalise data
alltraits$SLA <- log10(alltraits$SLA)
alltraits$leaf.area <- sqrt(alltraits$leaf.area)
alltraits$seed.mass <- log10(alltraits$seed.mass)
alltraits$flowering.duration <- sqrt(alltraits$flowering.duration)
alltraits$maximum.height <- sqrt(alltraits$maximum.height)
#alltraits$leaf.narrowness <- log10(alltraits$leaf.narrowness)
# impute missing data using either mice or missForests
#  imputed <- mice(alltraits[,2:8])
#  alltraits.imputed <- data.frame(cbind(alltraits[1], complete(imputed)))
#  alltraits <- data.frame(cbind(alltraits.imputed[,1:6], alltraits["leaf.narrowness"],alltraits["wood.density"]))
#  alltraits$wood.density <- NULL
#  alltraits$wood.density <- alltraits$wood.density.1
#  alltraits$wood.density.1 <- NULL
imputed <- missForest(alltraits[,2:8], maxiter = 100, ntree= 1000, verbose =TRUE, replace=TRUE, variablewise=TRUE)
alltraits <- read.csv("data/alltraits.csv", header=T)
sites <- read.csv("data/sites.csv", header=T)
vegSurveys <- read.csv("data/vegSurveys.csv", header=T)
hydro <- read.csv("data/hydro_1975-2008.csv", header=T)
source_GF <- read.csv("data/source_growthForm1.csv", header=T)
alltraits <- merge(alltraits, source_GF, all.x=TRUE)
source <- data.frame(cbind(alltraits["source"], alltraits["Taxon"]))
source("scripts/functions.R")
alltraits$X <- NULL
alltraits <- missing(alltraits)
alltraits.discarded <- subset(alltraits, missing >=3)
alltraits <- subset(alltraits, missing <3) # only keep species with less than X NA trait values
alltraits <- rbind(alltraits, alltraits.discarded[46,])
#  alltraits <- alltraits[-57,]
#  alltraits <- alltraits[-12,]
alltraits$missing <- NULL
# normalise data
alltraits$SLA <- log10(alltraits$SLA)
alltraits$leaf.area <- sqrt(alltraits$leaf.area)
alltraits$seed.mass <- log10(alltraits$seed.mass)
alltraits$flowering.duration <- sqrt(alltraits$flowering.duration)
alltraits$maximum.height <- sqrt(alltraits$maximum.height)
#alltraits$leaf.narrowness <- log10(alltraits$leaf.narrowness)
# impute missing data using either mice or missForests
#  imputed <- mice(alltraits[,2:8])
#  alltraits.imputed <- data.frame(cbind(alltraits[1], complete(imputed)))
#  alltraits <- data.frame(cbind(alltraits.imputed[,1:6], alltraits["leaf.narrowness"],alltraits["wood.density"]))
#  alltraits$wood.density <- NULL
#  alltraits$wood.density <- alltraits$wood.density.1
#  alltraits$wood.density.1 <- NULL
imputed <- missForest(alltraits[,2:8], maxiter = 100, ntree= 1000, verbose =TRUE, replace=TRUE, variablewise=TRUE)
alltraits.imputed <- data.frame(cbind(alltraits[1], as.data.frame(imputed[1])))
colnames(alltraits.imputed) <- c("Taxon",
"flowering.duration",
"leaf.area",
"maximum.height",
"seed.mass",
"SLA",
"wood.density",
"growthForm")
alltraits.imputed$wood.density <- alltraits$wood.density
#  alltraits.imputed$leaf.area <- alltraits$leaf.area
#  alltraits.imputed$seed.mass <- alltraits$seed.mass
#  alltraits.imputed$maximum.height <- alltraits$maximum.height
alltraits.imputed$growthForm <- alltraits$growthForm
alltraits <- alltraits.imputed
alltraits <- merge(alltraits, source, all.x=TRUE)
#alltraits <- na.omit(alltraits)
str(alltraits)
vegSurveys <- melt(vegSurveys, id.vars = c("site", "transect", "transect.area"))
colnames(vegSurveys)[4] <- c("Taxon")
colnames(vegSurveys)[5] <- c("count")
vegSurveys$Taxon <- as.factor(trim(vegSurveys$Taxon)) # trim white spaces
levels(vegSurveys$Taxon) <- capitalise(levels(vegSurveys$Taxon)) # make sure spp names are properly capitalised
# find unmodified species richness
#richness <- ddply(vegSurveys, .(site, Taxon), summarise, sum = sum(count))
#richness$sum[richness$sum>0] <- 1 # convert counts to presabs
#richness <- ddply(richness, .(site), summarise, richness = sum(sum))
transectArea <- ddply(vegSurveys, .(site), summarise, transectArea = sum(unique((transect.area))))
richness <- ddply(vegSurveys, .(site, Taxon), summarise, sum = sum(count))
richness$sum[richness$sum>0] <- 1 # convert counts to presabs
richness <- ddply(richness, .(site), summarise, richness = sum(sum))
richness$transectArea <- transectArea$transectArea
richness$richness.stand <- richness$richness / richness$transectArea
rich.estimated <- rich.est(vegSurveys)
# include only species with more than X occurrences at any site
#vegSurveys$site <- as.factor(vegSurveys$site)
#abundance <- ddply(vegSurveys, .(Taxon, site), summarise, countSum = sum(count))
#vegSurveys.short <- ddply(abundance,  .(Taxon), summarise, maxCount = max(countSum))
#vegSurveys.short <- subset(vegSurveys.short, maxCount > 1) # insert X here
#vegSurveys <- vegSurveys[vegSurveys$Taxon %in% vegSurveys.short$Taxon, ]
# convert transect counts -> site avg # per hectare
vegSurveys$perHa <- vegSurveys$count * 10000 / vegSurveys$transect.area
vegSurveys <- ddply(vegSurveys, .(site, Taxon), summarise, avgPerHa = mean(perHa))
vegSurveys_all <- vegSurveys
# find total cover in stems/Ha for each site
vegSurveys.totalcover <- ddply(vegSurveys, .(site), summarise, totalcover = sum(avgPerHa, na.rm=TRUE))
#vegSurveys.totalcover <- vegSurveys.totalcover[-3,] # don't know why this row appears!
vegSurveys <- merge(vegSurveys, vegSurveys.totalcover)
#vegSurveys <- merge(vegSurveys, alltraits, all.y=TRUE)
vegSurveys <- merge(vegSurveys, alltraits)
vegSurveys <- vegSurveys[order(vegSurveys$site),]
# get only traits for species which are present in surveys (kind of circular code here, as this is also done for vegSurveys above)
alltraits <- vegSurveys[!duplicated(vegSurveys[,c("Taxon")]),]
alltraits <- data.frame(cbind(alltraits["Taxon"],alltraits[,5:11]))
source('C:/Users/James/Desktop/stuff/data/analysis/R/SEQLDold/scripts/functions.R')
vegSurveys.ex <- subset(vegSurveys, source == "exotic")
blah <- ddply(vegSurveys.ex, .(site), summarise, proportionExotic = sum(avgPerHa) / totalcover)
blah <- unique(blah)
exotics <- data.frame(cbind(blah["site"],
blah["proportionExotic"],
"FDis.proportion" = withExotics$FDis / withoutExotics$FDis,
"FDiv.proportion" = withExotics$FDiv / withoutExotics$FDiv,
"FRic.proportion" = withExotics$FRic / withoutExotics$FRic,
"FEve.proportion" = withExotics$FEve / withoutExotics$FEve))
#write.csv(exotics, "output/exotics.csv")
#exotics.x <- read.csv("output/exotics.csv", header=T)
plot(FDis.proportion ~ proportionExotic, data = exotics)
plot(FDis.proportion ~ proportionExotic, data = subset(exotics, FDis.proportion < 3))
plot(FRic.proportion ~ proportionExotic, data = exotics)
plot(FEve.proportion ~ proportionExotic, data = exotics)
plot(FDiv.proportion ~ proportionExotic, data = exotics)
blaj <- lm(FDis.proportion ~ proportionExotic + I(proportionExotic^2), subset(exotics, FDis.proportion < 3))
summary(blaj)
hydrosites$exotics <- exotics$proportionExotic
exotics <- ddply(vegSurveys.ex, .(site), summarise, proportionExotic = sum(avgPerHa) / totalcover)
exotics <- unique(exotics)
str(exotics)
hydrosites$exotics <- exotics$proportionExotic
hydro <- read.csv("data/hydro_1975-2008.csv", header=T)
sites <- read.csv("data/sites.csv", header=T)
climate <- read.csv("data/sites_clim_soil.csv", header=T)
climate.site <- climate$site
climate <- data.frame(cbind(climate[,7:37], site = climate.site))
hydro$MDF <- NULL
hydrosites2 <- merge(hydro, sites, all.y=TRUE, by = c("gaugeID"))
hydrosites2 <- hydrosites2[order(hydrosites2$site),]
hydrosites2 <- hydrosites2[,3:38]
alldata <- merge(climate, hydrosites2, by=c("site"))
alldata <- alldata[,7:79]
alldata$gaugeID.y <- NULL
alldata$gaugeName.x <- NULL
alldata1 <- alldata # for PCA
alldata1$regulation <- NULL
alldata1$PC1 <- NULL
alldata1$PC2 <- NULL
alldata1$PC3 <- NULL
alldata1$PC4 <- NULL
alldata1 <- data.frame(cbind(alldata1[,1:19], alldata1[,32:65]))
alldata$site <- siteNums
alldata$FDis <- FD$FDis
alldata$FDiv <- FD$FDiv
alldata$FRic <- FD$FRic
alldata$FEve <- FD$FEve
alldata$RaoQ <- FD$RaoQ
alldata$FGR <- FD$FGR
alldata$nbsp <- FD$nbsp
alldata$simpson <- FD.redun$Simpson
alldata$FunRao <- FD.redun$FunRao
alldata$redun <- FD.redun$FunRedundancy
alldata$nbsp <- FD$nbsp
alldata$richness <- richness$richness
alldata$exotics <- exotics.x$proportionExotic
alldata$SLA<- CWM$SLA
alldata$seed.mass <- CWM$seed.mass
alldata$maximum.height <- CWM$maximum.height
alldata$flowering.duration <- CWM$flowering.duration
alldata$wood.density <- CWM$wood.density
alldata$leaf.area <- CWM$leaf.area
hydro_to1999 <- read.csv("data/hydro_1975-1999.csv")
hydro_IQQM <- read.csv("data/hydro_IQQM.csv")
sites <- read.csv("data/sites.csv")
# remove Teviot @ Croftby and Burnett at U/S Maroon Dam, as neither have IQQM correlates
hydro_to1999a <- hydro_to1999[-16,]
hydro_to1999a <- hydro_to1999a[-15,]
#hydro_IQQMa <- hydro_IQQM[-17,]
#hydro_IQQMa <- hydro_IQQM[-15,]
hydro_to1999a <- hydro_to1999a[order(hydro_to1999a$gaugeID),]
hydro_IQQM <- hydro_IQQM[order(hydro_IQQM$gaugeID),]
hydro_compare <- rbind(hydro_to1999a, hydro_IQQM)
hydro_compare <- hydro_compare
#hydro_compare <- hydro_compare[order(hydro_compare$gaugeID),]
#hydro_compare <- hydro_compare[1:40,]
rownames(hydro_compare) <- hydro_compare$gaugeName
hydro_compare <- hydro_compare[,4:36]
hydro_compare.dis <- vegdist(hydro_compare, method="gower")
#hydro_compare.dis <- daisy(hydro_compare, metric="manhattan", stand=TRUE)
#View(as.matrix(hydro_compare.dis))
#write.csv(as.matrix(hydro_compare.dis), file="output/gower.csv")
# find percent change from IQQM for each metric
#hydro_to1999a[17,"MDFAnnZer"] <- 0.01 # incrementing zero, otherwise inf's are produced
#hydro_to1999a[20,"MDFAnnZer"] <- 0.01
hydro_change <- compare.hydro(hydro_IQQM[,4:36], hydro_to1999a[,4:36])
#hydro_change[1,"MDFAnnZer"] <- 0 # zero divided by zero
hydro_change$MDFAnnZer <- NULL # too complicated to try and work out what percent changes from zero should be
# merge with alldata
hydro_change$gaugeID <- hydro_to1999a$gaugeID
hydro_change <- merge(hydro_change, sites, by = "gaugeID")
hydro_change <- hydro_change[order(hydro_change$site),]
hydro_change <- hydro_change[,2:34]
alldata1 <- merge(alldata, hydro_change, by="site", all.x = TRUE, fill="NA")
str(alldata1)
alldata1$site
sites
alldata1$replicate <- sites$replicate
rep1 <- subset(alldata1, replicate == 1)
rep2 <- subset(alldata1, replicate == 2)
plot(rep1$FDis, rep2$FDis)
plot(rep1$exotics, rep2$exotics)
alldata1$exotics <- hydrosites$exotics
alldata1$exotics
plot(rep1$exotics, rep2$exotics)
rep1 <- subset(alldata1, replicate == 1)
rep2 <- subset(alldata1, replicate == 2)
plot(rep1$exotics, rep2$exotics)
CWM
CWM$replicate <- sites$replicate
plot(SLA ~ replicate, CWM)
plot(rep1$SLA, rep2$SLA)
plot(rep1$seedmass, rep2$seedmass)
plot(rep1$seed.mass, rep2$seed.mass)
plot(rep1$FDis, rep2$FDis)
plot(rep1$richness, rep2$richness)
cor(rep1$richness, rep2$richness)
plot(rep1$FRic, rep2$FRic)
cor(rep1$FRic, rep2$FRic)
?lme
require(nlme)
getStats(hydrosites, hydrosites$FDis, FD)
x <- lme(FDis ~ regulation, random = (1|replicate), alldata1)
x <- lme(FDis ~ regulation, random = (replicate), alldata1)
x <- lme(FDis ~ regulation, random = replicate, alldata1)
?lme
x <- lme(FDis ~ regulation, random = ~(1|replicate), alldata1)
x <- lme(FDis ~ regulation, random = ~replicate, alldata1)
x <- lme(FDis ~ regulation, random = ~(1|replicate), na.omit(alldata1))
x <- lme(FDis ~ regulation, random = ~replicate, na.omit(alldata1))
x <- lme(FDis ~ regulation, random = ~1 + replicate, na.omit(alldata1))
x <- lme(FDis ~ regulation, random = ~(1 + replicate), na.omit(alldata1))
x <- lme(FDis ~ regulation, random = ~1|replicate, na.omit(alldata1))
summary(x)
x1 <- lme(FDis ~ regulation, random = ~1, na.omit(alldata1))
x1 <- lme(FDis ~ regulation, na.omit(alldata1))
x1 <- lme(FDis ~ C_MaxM, random = ~1|replicate, na.omit(alldata1))
summary(x)
summary(x1)
x1 <- lme(FDis ~ C_MaxM, random = ~1|replicate, na.omit(alldata1))
alldata1$C_MaxM
hydro <- read.csv("data/hydro_1975-2008.csv", header=T)
sites <- read.csv("data/sites.csv", header=T)
climate <- read.csv("data/sites_clim_soil.csv", header=T)
climate.site <- climate$site
climate <- data.frame(cbind(climate[,7:37], site = climate.site))
hydro$MDF <- NULL
hydrosites2 <- merge(hydro, sites, all.y=TRUE, by = c("gaugeID"))
hydrosites2 <- hydrosites2[order(hydrosites2$site),]
hydrosites2 <- hydrosites2[,3:38]
alldata <- merge(climate, hydrosites2, by=c("site"))
alldata <- alldata[,7:79]
alldata$gaugeID.y <- NULL
alldata$gaugeName.x <- NULL
alldata1 <- alldata # for PCA
hydro <- read.csv("data/hydro_1975-2008.csv", header=T)
sites <- read.csv("data/sites.csv", header=T)
climate <- read.csv("data/sites_clim_soil.csv", header=T)
climate.site <- climate$site
climate <- data.frame(cbind(climate[,7:37], site = climate.site))
hydro$MDF <- NULL
hydrosites2 <- merge(hydro, sites, all.y=TRUE, by = c("gaugeID"))
hydrosites2 <- hydrosites2[order(hydrosites2$site),]
hydrosites2 <- hydrosites2[,3:38]
alldata <- merge(climate, hydrosites2, by=c("site"))
alldata <- alldata[,7:79]
str(alldata)
alldata <- alldata[,2:67]
alldata$gaugeID.y <- NULL
alldata$gaugeName.x <- NULL
alldata1 <- alldata # for PCA
alldata$site <- siteNums
alldata$FDis <- FD$FDis
alldata$FDiv <- FD$FDiv
alldata$FRic <- FD$FRic
alldata$FEve <- FD$FEve
alldata$RaoQ <- FD$RaoQ
alldata$FGR <- FD$FGR
alldata$nbsp <- FD$nbsp
alldata$simpson <- FD.redun$Simpson
alldata$FunRao <- FD.redun$FunRao
alldata$redun <- FD.redun$FunRedundancy
alldata$nbsp <- FD$nbsp
alldata$richness <- richness$richness
alldata$exotics <- exotics$proportionExotic
alldata$SLA<- CWM$SLA
alldata$seed.mass <- CWM$seed.mass
alldata$maximum.height <- CWM$maximum.height
alldata$flowering.duration <- CWM$flowering.duration
alldata$wood.density <- CWM$wood.density
alldata$leaf.area <- CWM$leaf.area
alldata$richness.stand <- richness$richness.stand
hydro_to1999 <- read.csv("data/hydro_1975-1999.csv")
hydro_IQQM <- read.csv("data/hydro_IQQM.csv")
sites <- read.csv("data/sites.csv")
# remove Teviot @ Croftby and Burnett at U/S Maroon Dam, as neither have IQQM correlates
hydro_to1999a <- hydro_to1999[-16,]
hydro_to1999a <- hydro_to1999a[-15,]
#hydro_IQQMa <- hydro_IQQM[-17,]
#hydro_IQQMa <- hydro_IQQM[-15,]
hydro_to1999a <- hydro_to1999a[order(hydro_to1999a$gaugeID),]
hydro_IQQM <- hydro_IQQM[order(hydro_IQQM$gaugeID),]
hydro_compare <- rbind(hydro_to1999a, hydro_IQQM)
hydro_compare <- hydro_compare
#hydro_compare <- hydro_compare[order(hydro_compare$gaugeID),]
#hydro_compare <- hydro_compare[1:40,]
rownames(hydro_compare) <- hydro_compare$gaugeName
hydro_compare <- hydro_compare[,4:36]
hydro_compare.dis <- vegdist(hydro_compare, method="gower")
#hydro_compare.dis <- daisy(hydro_compare, metric="manhattan", stand=TRUE)
#View(as.matrix(hydro_compare.dis))
#write.csv(as.matrix(hydro_compare.dis), file="output/gower.csv")
# find percent change from IQQM for each metric
#hydro_to1999a[17,"MDFAnnZer"] <- 0.01 # incrementing zero, otherwise inf's are produced
#hydro_to1999a[20,"MDFAnnZer"] <- 0.01
hydro_change <- compare.hydro(hydro_IQQM[,4:36], hydro_to1999a[,4:36])
#hydro_change[1,"MDFAnnZer"] <- 0 # zero divided by zero
hydro_change$MDFAnnZer <- NULL # too complicated to try and work out what percent changes from zero should be
# merge with alldata
hydro_change$gaugeID <- hydro_to1999a$gaugeID
hydro_change <- merge(hydro_change, sites, by = "gaugeID")
hydro_change <- hydro_change[order(hydro_change$site),]
hydro_change <- hydro_change[,2:34]
alldata1 <- merge(alldata, hydro_change, by="site", all.x = TRUE, fill="NA")
x <- lme(FDis ~ regulation, random = ~1|replicate, na.omit(alldata1))
x1 <- lme(FDis ~ C_MaxM, random = ~1|replicate, na.omit(alldata1))
alldata1$replicate <- sites$replicate
alldata
str(alldata)
x <- lme(FDis ~ regulation, random = ~1|replicate, na.omit(alldata1))
x1 <- lme(FDis ~ C_MaxM.x, random = ~1|replicate, na.omit(alldata1))
summary(x)
summary(x1)
x <- lme(FDis ~ regulation, random = ~regulation|replicate, na.omit(alldata1))
summary(x)
x <- lme(FDis ~ regulation, random = ~1|replicate, na.omit(alldata1))
x1 <- lme(FDis ~ C_MaxM.x, random = ~1|replicate, na.omit(alldata1))
summary(x)
summary(x1)
x2 <- lme(FDis ~ regulation + C_MaxM.x, random = ~1|replicate, na.omit(alldata1))
summary(x2)
x <- lme(exotics ~ regulation, random = ~1|replicate, na.omit(alldata1))
summary(x)
x <- lme(richess ~ regulation, random = ~1|replicate, na.omit(alldata1))
x <- lme(richness ~ regulation, random = ~1|replicate, na.omit(alldata1))
summary(x)
